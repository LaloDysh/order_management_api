"""Initial migration

Revision ID: 4b0356515f88
Revises: b5e10b711461
Create Date: 2025-04-07 13:24:01.822390

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4b0356515f88'
down_revision = 'b5e10b711461'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('idx_users_email')
        batch_op.drop_index('idx_users_name')
        batch_op.drop_index('ix_users_email')

    op.drop_table('users')
    with op.batch_alter_table('order_products', schema=None) as batch_op:
        batch_op.drop_index('idx_order_products_order_id')
        batch_op.drop_index('idx_order_products_order_product')
        batch_op.drop_index('idx_order_products_product_id')
        batch_op.drop_index('idx_order_products_quantity')

    op.drop_table('order_products')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index('idx_products_name')
        batch_op.drop_index('idx_products_price')
        batch_op.drop_index('ix_products_name')

    op.drop_table('products')
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_index('idx_orders_created_at')
        batch_op.drop_index('idx_orders_customer_name')
        batch_op.drop_index('idx_orders_user_created')
        batch_op.drop_index('idx_orders_user_id')
        batch_op.drop_index('ix_orders_created_at')

    op.drop_table('orders')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orders',
    sa.Column('id', sa.VARCHAR(length=36), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('customer_name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('total_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='orders_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='orders_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.create_index('ix_orders_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_orders_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_orders_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index('idx_orders_customer_name', ['customer_name'], unique=False)
        batch_op.create_index('idx_orders_created_at', ['created_at'], unique=False)

    op.create_table('products',
    sa.Column('id', sa.VARCHAR(length=36), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='products_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index('ix_products_name', ['name'], unique=False)
        batch_op.create_index('idx_products_price', ['price'], unique=False)
        batch_op.create_index('idx_products_name', ['name'], unique=False)

    op.create_table('order_products',
    sa.Column('id', sa.VARCHAR(length=36), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('unit_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name='order_products_order_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='order_products_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_products_pkey')
    )
    with op.batch_alter_table('order_products', schema=None) as batch_op:
        batch_op.create_index('idx_order_products_quantity', ['quantity'], unique=False)
        batch_op.create_index('idx_order_products_product_id', ['product_id'], unique=False)
        batch_op.create_index('idx_order_products_order_product', ['order_id', 'product_id'], unique=False)
        batch_op.create_index('idx_order_products_order_id', ['order_id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.VARCHAR(length=36), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('ix_users_email', ['email'], unique=True)
        batch_op.create_index('idx_users_name', ['name'], unique=False)
        batch_op.create_index('idx_users_email', ['email'], unique=False)

    # ### end Alembic commands ###
